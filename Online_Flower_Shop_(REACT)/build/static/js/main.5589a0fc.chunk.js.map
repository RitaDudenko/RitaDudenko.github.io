{"version":3,"sources":["components/Button/index.js","components/Icon/index.js","components/Header/index.js","components/Modal/index.js","components/Footer/index.js","store/cartList/operations.js","store/cartList/actions.js","store/cartList/types.js","store/products/operations.js","store/products/actions.js","store/products/types.js","components/CartItem/index.js","store/modal/operations.js","store/modal/actions.js","store/modal/types.js","components/Form/MyInput.js","components/Form/schema.js","components/Form/index.js","pages/Cart/index.js","components/Card/index.js","store/favourites/operations.js","store/favourites/actions.js","store/favourites/types.js","pages/Favourites/index.js","components/Body/index.js","routes/AppRoutes.js","App.js","serviceWorker.js","store/cartList/reducer.js","store/favourites/reducer.js","store/modal/reducer.js","store/products/reducer.js","store/reducer.js","store/store.js","index.js"],"names":["Button","backgroundColor","text","onClick","className","children","disabled","type","btnType","btnClassName","style","data-testid","Icon","aria-hidden","connect","cartList","productAmount","length","to","src","alt","Modal","header","closeButton","contentClassName","actionBtnClassName","confirm","modalContentClass","spanStyle","actionsStyle","e","stopPropagation","Footer","changeQuantityOperation","product","dispatch","payload","changeQuantityAction","getCurrentProductOperation","getCurrentProductAction","openModalCart","setCurrentProduct","changeQuantity","id","title","url","price","quantity","key","MyInput","props","label","name","rest","useField","field","meta","touched","error","REQUIRED_FIELD","schema","yup","shape","required","min","surname","age","typeError","integer","max","address","phone","matches","doShopping","withFormik","mapPropsToValues","handleSubmit","values","console","log","forEach","item","index","validationSchema","isSubmitting","noValidate","placeholder","chosenProducts","map","totalAmount","reduce","sum","parseInt","favourites","addCardToFav","addToFavAction","addToFavOperation","removeCardFromFav","removeFromFavAction","removeFromFavOperation","getCurrentProduct","openModal","article","color","isInFav","find","withRouter","history","favProducts","push","products","productsList","AppRoutes","path","component","Favourites","Cart","Body","modal","saveProducts","axios","then","res","data","saveFavourites","fav","saveFavouritesAction","saveFavouritesOperation","saveCartList","saveCartListAction","saveCartListOperation","closeModal","closeModalCart","addQuantity","addProductToCart","addToCartAction","addToCartOperation","removeFromCart","removeFromCartAction","removeFromCartOperation","currentProduct","modalOpen","cartModalOpen","useEffect","JSON","parse","localStorage","getItem","cartElement","addToCart","Boolean","window","location","hostname","match","initialState","reducer","state","action","setItem","stringify","obj","filter","element","rootReducer","combineReducers","devTools","__REDUX_DEVTOOLS_EXTENSION__","f","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.5589a0fc.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Button.scss';\r\n\r\nconst Button = ({backgroundColor,  text, onClick, className, children, disabled, type}) => {\r\n        const btnType = type ? `${type}` : 'button';\r\n        const btnClassName = className ? `btn ${className}` : 'btn';\r\n\r\n        return (\r\n            <button  type={btnType} style={{backgroundColor}} className={btnClassName}  onClick={onClick}\r\n                     data-testid='testing-button'\r\n                     disabled={disabled}>{text}{children}</button>\r\n\r\n        );\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport './Icon.scss';\r\n\r\nconst Icon = ({className, onClick}) => {\r\n\r\n        return (\r\n            <i className={`${className} icon`} onClick={onClick} aria-hidden=\"true\"/>\r\n        );\r\n\r\n};\r\n\r\nexport default Icon;","import React  from 'react';\r\nimport './Header.scss';\r\nimport Button from \"../Button\";\r\nimport Icon from \"../Icon\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from 'react-redux';\r\n\r\n export const Header = ({cartList}) => {\r\n\r\n        const productAmount = !!cartList ? `(${cartList.length})` : '';\r\n\r\n    return (\r\n            <div className='header'>\r\n                <div className='header-container'>\r\n                    <Link to=\"/\">\r\n                        <div className=\"logo\">\r\n                            <img className=\"logo-img\" src='./logo.jpg' alt='flowers'/>\r\n                            <div className=\"logo-text\">\r\n                                Magic <span className=\"garden-span\">Garden</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </Link>\r\n\r\n                    <div className='header-buttons-wrapper'>\r\n                        <Link  to='/favourites'>\r\n                            <Button backgroundColor='black' className='btn--cart'>\r\n                                <Icon className='fa fa-star icon--white'/> Избранное</Button>\r\n                        </Link>\r\n\r\n                        <Link  to='/cart'>\r\n                            <Button backgroundColor='indianred' className='btn--cart'>\r\n                                <Icon className='fa fa-shopping-cart icon--white'/> Корзина <span>{productAmount}</span>\r\n                            </Button>\r\n                        </Link>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n};\r\n\r\nconst mapStateToProps = ({cartList}) => ({cartList});\r\n\r\nexport default connect(mapStateToProps)(Header);","import React  from 'react';\r\nimport './Modal.scss'\r\nimport Button from \"../Button\";\r\n\r\nconst Modal = ({header, closeButton, text, onClick, contentClassName, btnClassName, actionBtnClassName, confirm}) => {\r\n\r\n        const modalContentClass = contentClassName ? `modal__content ${contentClassName}` : 'modal__content';\r\n        const spanStyle = btnClassName ? `btn ${btnClassName}` : 'btn';\r\n        const actionsStyle = actionBtnClassName ? `${spanStyle} ${actionBtnClassName} ` : `${spanStyle}`;\r\n\r\n        return (\r\n            <div className='modal' onClick={onClick}>\r\n                <div className={modalContentClass} onClick={e => e.stopPropagation()}>\r\n                    <div className='modal__header'>\r\n                        <h3>{header}</h3>\r\n                        {closeButton && <span className={spanStyle} onClick={onClick}>&#10008;</span>}\r\n                    </div>\r\n                        <div className='modal__text'>{text}</div>\r\n                    <div className='modal__actions'>\r\n                        <Button backgroundColor='rgba(0,0,0,0.3)' className={actionsStyle} text='Да' onClick={confirm} />\r\n                        <Button backgroundColor='rgba(0,0,0,0.3)' className={actionsStyle} text='Отмена' onClick={onClick}/>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n};\r\n\r\nexport default Modal;","import React from 'react';\r\nimport './Footer.scss';\r\nimport Icon from \"../Icon\";\r\n\r\nconst Footer = () => {\r\n        return (\r\n            <div className='footer'>\r\n                <div className='icons-block'>\r\n                    <Icon className='fa fa-facebook-square  '/>\r\n                    <Icon className='fa fa-twitter-square '/>\r\n                    <Icon className='fa fa-instagram'/>\r\n                    <Icon className='fa fa-pinterest-square'/>\r\n                </div>\r\n                <p className=\"footer-content\">&copy;Magic Garden. License since 2017</p>\r\n\r\n            </div>\r\n        );\r\n};\r\n\r\nexport default Footer;","import {changeQuantityAction, addToCartAction, removeFromCartAction, saveCartListAction, doShoppingAction} from './actions';\r\n\r\n\r\nexport const changeQuantityOperation = (product) => (dispatch) => {\r\n     dispatch (changeQuantityAction(product));\r\n};\r\n\r\nexport const addToCartOperation = (product) => (dispatch) => {\r\n     dispatch (addToCartAction(product));\r\n};\r\n\r\nexport const removeFromCartOperation = (product) => (dispatch) => {\r\n     dispatch (removeFromCartAction(product));\r\n};\r\n\r\nexport const saveCartListOperation = (product) => (dispatch) => {\r\n     dispatch (saveCartListAction(product));\r\n};\r\n\r\nexport const doShoppingOperation = () => (dispatch) => {\r\n     dispatch (doShoppingAction());\r\n};","import * as cartListActions from './types';\r\n\r\nexport const changeQuantityAction = (product) => ({\r\n    type: cartListActions.CHANGE_QUANTITY,\r\n    payload: product\r\n});\r\n\r\nexport const addToCartAction = (product) => ({\r\n    type:cartListActions.ADD_PRODUCT_TO_CART,\r\n    payload: product\r\n});\r\n\r\nexport const removeFromCartAction = (product) =>({\r\n    type: cartListActions.REMOVE_FROM_CART,\r\n    payload: product\r\n});\r\n\r\nexport const saveCartListAction = (product) => ({\r\n    type: cartListActions.SAVE_CARTLIST,\r\n    payload: product\r\n});\r\n\r\nexport const doShoppingAction = () => ({\r\n    type: cartListActions.DO_SHOPPING\r\n});\r\n","export const SAVE_CARTLIST = \"SAVE_CARTLIST\";\r\nexport const CHANGE_QUANTITY = \"CHANGE_QUANTITY\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const ADD_PRODUCT_TO_CART = \"ADD_PRODUCT_TO_CART\";\r\nexport const DO_SHOPPING = 'DO_SHOPPING';","import {saveProductsAction, getCurrentProductAction} from './actions';\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const saveProductsOperation = () => (dispatch) => {\r\n    axios('/products.json')\r\n        .then(res => {\r\n            dispatch(saveProductsAction(res.data));\r\n        });\r\n};\r\n\r\nexport const getCurrentProductOperation = (product) => (dispatch) => {\r\n    dispatch(getCurrentProductAction(product));\r\n\r\n};","import * as productActions from './types';\r\n\r\nexport const saveProductsAction = (product) =>({\r\n    type: productActions.SAVE_PRODUCTS,\r\n    payload: product\r\n});\r\n\r\nexport const getCurrentProductAction = (product) => ({\r\n    type: productActions.GET_CURRENT_PRODUCT,\r\n    payload: product\r\n});\r\n","export const SAVE_PRODUCTS = \"SAVE_PRODUCTS\";\r\nexport const GET_CURRENT_PRODUCT = \"GET_CURRENT_PRODUCT\";","import React from 'react';\r\nimport Button from \"../Button\";\r\nimport Icon from \"../Icon\";\r\nimport \"./CartItem.scss\";\r\nimport {connect} from 'react-redux';\r\nimport {changeQuantityOperation} from '../../store/cartList/operations';\r\nimport {openModalCartOperation} from '../../store/modal/operations';\r\nimport {getCurrentProductOperation} from '../../store/products/operations';\r\n\r\nexport const CartItem = ({product, openModalCart, setCurrentProduct, changeQuantity}) => {\r\n\r\n    const {id, title, url, price, quantity} = product;\r\n\r\n    const deleteProduct = () => {\r\n        openModalCart();\r\n        setCurrentProduct(product);\r\n    };\r\n\r\n    const decProductQuantity = () => {\r\n        if (quantity > 1){\r\n            product.quantity = quantity - 1;\r\n        }\r\n        changeQuantity(product);\r\n    };\r\n\r\n    const incProductQuantity = () => {\r\n        product.quantity = quantity + 1;\r\n        changeQuantity(product);\r\n    };\r\n\r\n    return (\r\n        <div className='product-cart-view' key={id}>\r\n            <span><img className='cart-img' src={url} alt='flower'/></span>\r\n            <span className='product-cart-title'>{title}</span>\r\n            <span>\r\n                       <Button backgroundColor=\"black\" text=\"--\" onClick={decProductQuantity}/>\r\n                       <span className=\"product-cart-quantity\">{quantity}</span>\r\n                       <Button backgroundColor=\"black\" text=\"+\" onClick={incProductQuantity}/>\r\n                   </span>\r\n            <span className='product-cart-price'>{price}</span>\r\n            <span className='delete-product' onClick={deleteProduct} data-testid=\"deleting-span\"><Icon\r\n                className='fa fa-times'/></span>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    openModalCart: () => dispatch(openModalCartOperation()),\r\n    setCurrentProduct: (product) => dispatch(getCurrentProductOperation(product)),\r\n    changeQuantity: (product) => dispatch(changeQuantityOperation(product))\r\n});\r\n\r\nexport default connect(null,mapDispatchToProps)(CartItem);","import {closeModalAction, closeModalCartAction, openModalAction, openModalCartAction} from './actions';\r\n\r\n\r\nexport const closeModalOperation = () => (dispatch) => {\r\n    dispatch(closeModalAction());\r\n};\r\n\r\nexport const openModalOperation = () => (dispatch) => {\r\n    dispatch(openModalAction());\r\n};\r\n\r\nexport const closeModalCartOperation = () => (dispatch) => {\r\n    dispatch(closeModalCartAction());\r\n};\r\n\r\nexport const openModalCartOperation = () => (dispatch) => {\r\n    dispatch(openModalCartAction());\r\n};","import * as modalActions from './types';\r\n\r\n\r\nexport const closeModalAction = () => ({\r\n    type: modalActions.CLOSE_MODAL\r\n});\r\n\r\nexport const openModalAction = () => ({\r\n        type: modalActions.OPEN_MODAL\r\n});\r\n\r\nexport const closeModalCartAction = () => ({\r\n    type: modalActions.CLOSE_MODAL_CART\r\n});\r\n\r\nexport const openModalCartAction = () => ({\r\n    type: modalActions.OPEN_MODAL_CART\r\n});","export const CLOSE_MODAL = \"CLOSE_MODAL\";\r\nexport const CLOSE_MODAL_CART = \"CLOSE_MODAL_CART\";\r\nexport const OPEN_MODAL = \"OPEN_MODAL\";\r\nexport const OPEN_MODAL_CART = 'OPEN_MODAL_CART';","import React from 'react';\r\nimport {useField} from \"formik\";\r\n\r\nconst MyInput = (props) => {\r\n    const {label,name, ...rest} = props;\r\n\r\n    const [field, meta] = useField(name);\r\n\r\n    return (\r\n        <>\r\n            <div className='shopping-form-field'>\r\n                <label className='label'>{label}<span className='required'>*</span></label>\r\n                <input {...field} {...rest}/>\r\n            </div>\r\n            {meta.touched && meta.error && <div className='error'>{meta.error}</div>}\r\n        </>\r\n);\r\n};\r\n\r\nexport default MyInput;","import * as yup from \"yup\";\r\n\r\n\r\nconst PHONE_REGEX = /^((\\+38))?([ ])?((\\(\\d{3}\\))|(\\d{3}))?([ ])?(\\d{3}[- ]?\\d{2}[- ]?\\d{2})$/;\r\nconst REQUIRED_FIELD = 'This field is required!';\r\n\r\nconst schema = yup.object().shape({\r\n    name: yup.string().required(REQUIRED_FIELD).min(3, 'This field must contain at least 3 letters'),\r\n    surname: yup.string().required(REQUIRED_FIELD),\r\n    age: yup.number().typeError('Age must be a number').required(REQUIRED_FIELD)\r\n        .integer('You must enter the number of full years ')\r\n        .min(16, \"You haven't enough age to make this purchase\").max(120, 'Incorrect value!'),\r\n    address: yup.string().required(REQUIRED_FIELD),\r\n    phone: yup.string().required(REQUIRED_FIELD).matches(PHONE_REGEX, 'Phone number is not valid')\r\n});\r\n\r\nexport default schema;","import React from \"react\";\r\nimport './Form.scss';\r\nimport Button from \"../Button\";\r\nimport {Form, withFormik} from 'formik';\r\nimport MyInput from \"./MyInput\";\r\nimport {connect} from \"react-redux\";\r\nimport {doShoppingOperation} from '../../store/cartList/operations';\r\nimport schema from \"./schema\";\r\n\r\n\r\nexport const purchaseCreation = (values, {props}) => {\r\n    const {cartList, doShopping} = props;\r\n    console.log('Ваша покупка:');\r\n    cartList.forEach((item, index) => console.log(`${index + 1}. ${item.title} -  ${item.quantity} шт.`));\r\n    console.log('Ваши данные:');\r\n    for(let key in values){\r\n        console.log(`${key}: ${values[key]}`);\r\n    }\r\n    doShopping();\r\n};\r\n\r\n\r\n const ShoppingForm = ({cartList, doShopping}, {isSubmitting}) => {\r\n\r\n            return(\r\n                <Form className='shopping-form' noValidate>\r\n                        <MyInput type='text' placeholder='Имя' name='name'\r\n                              label='Ваше имя'/>\r\n                        <MyInput type='text' placeholder='Фамилия' name='surname'\r\n                               label='Ваша фамилия' />\r\n                        <MyInput type='text' placeholder='Возраст' name='age'\r\n                               label='Ваш возраст' />\r\n                        <MyInput type='text' placeholder='Адрес доставки' name='address'\r\n                               label='Адрес доставки'  />\r\n                        <MyInput type='text' placeholder='+380' name='phone'\r\n                               label='Мобильный телефон' />\r\n                    <div className='shopping-form-btn'>\r\n                        <Button  backgroundColor='indianred' text='Подтвердить' className='btn--cart' type='submit'\r\n                                 disabled={isSubmitting}/>\r\n                    </div>\r\n                    <p className=\"footnote\"><span className='required'>*</span> - поле обязательное для заполнения </p>\r\n                </Form>\r\n            )\r\n};\r\n\r\nconst mapStateToProps = ({cartList}) => ({cartList});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    doShopping: () => dispatch(doShoppingOperation()),\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withFormik({\r\n    mapPropsToValues: () => ({\r\n        name: '',\r\n        surname: '',\r\n        age: '',\r\n        address: '',\r\n        phone: '+380'\r\n    }),\r\n    handleSubmit: purchaseCreation,\r\n    validationSchema: schema\r\n})(ShoppingForm));","import React from 'react';\r\nimport './Cart.scss'\r\nimport Button from \"../../components/Button\";\r\nimport CartItem from \"../../components/CartItem\";\r\nimport  {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport  Form from \"../../components/Form\";\r\n\r\nconst Cart = ({cartList}) => {\r\n\r\n    const chosenProducts = cartList.map(item =>\r\n        <CartItem key={item.id}  product={item}/>);\r\n\r\n    const totalAmount = cartList.reduce((sum, product) => {\r\n        const {price, quantity} = product;\r\n        return sum + parseInt(price) * quantity ;\r\n    }, 0);\r\n\r\n    return (\r\n        <div className='cart-container'>\r\n            <h2 className=\"cart-title\">Ваша покупка</h2>\r\n            {!cartList.length && <div className='empty-cart'>Корзина пуста</div>}\r\n            {!!cartList.length && <div className='cart-content'>\r\n            <Form/>\r\n            <div className=\"cart-items\">\r\n            {chosenProducts}\r\n             <div className=\"total-sum\">\r\n                <span>К оплате:</span>\r\n                <span className=\"total-sum-amount\">{totalAmount} UAH</span>\r\n            </div>\r\n            </div>\r\n            </div>}\r\n\r\n            <div className=\"cart-buttons\">\r\n                <Link to=\"/\"><Button backgroundColor='black' text='&larr; Продолжить покупки'/></Link>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = ({cartList}) => ({cartList});\r\n\r\n\r\nexport default connect(mapStateToProps)(Cart);","import React from 'react';\r\nimport \"./Card.scss\";\r\nimport Button from \"../Button\";\r\nimport Icon from \"../Icon\";\r\nimport {connect} from 'react-redux';\r\nimport {addToFavOperation, removeFromFavOperation} from '../../store/favourites/operations';\r\nimport {openModalOperation} from '../../store/modal/operations';\r\nimport {getCurrentProductOperation} from '../../store/products/operations';\r\n\r\n\r\nexport const Card = ({product, favourites, addCardToFav, removeCardFromFav, openModal, getCurrentProduct}) => {\r\n    const {title, price, url, article, color} = product;\r\n    const isInFav = favourites.find(item => item.id === product.id);\r\n\r\n    const addProductToCart = () => {\r\n        openModal();\r\n        getCurrentProduct(product);\r\n    };\r\n\r\n    const addToFav = () => {\r\n        addCardToFav(product);\r\n    };\r\n\r\n    const removeFromFav = () => {\r\n        removeCardFromFav(product);\r\n    };\r\n\r\n    return (\r\n        <div className='card'>\r\n            <div className=\"img-wrapper\"><img src={url} alt='flower'/></div>\r\n            <h5 className=\"product-title\">{title}</h5>\r\n            <p className=\"product-article\">Артикул: {article}</p>\r\n            <p className=\"product-color\">Цвет: {color}</p>\r\n            <h5 className=\"price\">{price}\r\n                {!isInFav && <Icon className=\"fa fa-star-o icon--m-l-30px\" onClick={addToFav}/>}\r\n                {!!isInFav && <Icon className=\"fa fa-star icon--gold icon--m-l-30px\" onClick={removeFromFav}/>}\r\n            </h5>\r\n            <div className='button-wrapper'>\r\n                <Button backgroundColor='indianred' className='btn--card' text=\"Купить\"\r\n                       onClick={addProductToCart}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({favourites}) => ({favourites});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    addCardToFav: (product) => dispatch(addToFavOperation(product)),\r\n    removeCardFromFav: (product) => dispatch(removeFromFavOperation(product)),\r\n    getCurrentProduct: (product) => dispatch(getCurrentProductOperation(product)),\r\n    openModal: () => dispatch(openModalOperation()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\r\n\r\n","import {saveFavouritesAction, addToFavAction, removeFromFavAction} from './actions';\r\n\r\n\r\nexport const saveFavouritesOperation = (fav) => (dispatch) =>{\r\n    dispatch(saveFavouritesAction(fav));\r\n};\r\n\r\nexport const addToFavOperation = (product) => (dispatch) =>{\r\n    dispatch(addToFavAction(product));\r\n};\r\n\r\nexport const removeFromFavOperation = (product) => (dispatch) =>{\r\n    dispatch(removeFromFavAction(product));\r\n};\r\n\r\n","import * as favouritesActions from './types';\r\n\r\n\r\nexport const saveFavouritesAction = (fav) =>({\r\n    type: favouritesActions.SAVE_FAVOURITES,\r\n    payload: fav\r\n});\r\n\r\nexport const addToFavAction = (product) => ({\r\n    type: favouritesActions.ADD_CARD_TO_FAV,\r\n    payload: product\r\n});\r\n\r\nexport const removeFromFavAction = (product) =>({\r\n    type: favouritesActions.REMOVE_CARD_FROM_FAV,\r\n    payload: product\r\n});","export const SAVE_FAVOURITES = \"SAVE_FAVOURITES\";\r\nexport const ADD_CARD_TO_FAV = \"ADD_CARD_TO_FAV\";\r\nexport const REMOVE_CARD_FROM_FAV = \"REMOVE_CARD_FROM_FAV\";","import React from 'react';\r\nimport './Favourites.scss';\r\nimport Button from \"../../components/Button\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport Card from \"../../components/Card\";\r\nimport {connect} from 'react-redux';\r\n\r\nconst Favourites = ({favourites, history}) => {\r\n\r\n        const favProducts = favourites.map(item => {\r\n            return(\r\n                <Card key={item.id} product={item}/>\r\n            )\r\n        });\r\n\r\n   const closeFavourites = () => {\r\n        history.push('/');\r\n    };\r\n\r\n        return (\r\n            <div className='favourites-container'>\r\n                <h2 className=\"favourites-title\">Избранное</h2>\r\n                <div className=\"fav-cards-container\">{favProducts}</div>\r\n                <div className=\"fav-buttons\">\r\n                    <Button backgroundColor='black' text='&larr; Назад' onClick={closeFavourites}/>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n};\r\n\r\nconst mapStateToProps = ({favourites}) => ({favourites});\r\n\r\nexport default connect(mapStateToProps)(withRouter(Favourites));\r\n\r\n","import React from 'react';\r\nimport './Body.scss';\r\nimport Card from \"../Card\";\r\nimport {connect} from 'react-redux';\r\n\r\nconst Body = ({products}) =>{\r\n\r\n       const productsList = products.products.map(product =>\r\n                <Card key={product.id}  product={product}/>);\r\n\r\n        return (\r\n            <div className='body'>\r\n                <h1 className='title'>EH Magic <span className='title-span'>Garden</span></h1>\r\n                <h2 className='subtitle'>Мы создали Magic Garden для того, чтобы вам не пришлось думать,\r\n                    как лучше выразить свои чувства.</h2>\r\n                {productsList}\r\n            </div>\r\n        );\r\n\r\n};\r\n\r\nconst mapStateToProps = ({products}) => ({products});\r\n\r\nexport default connect(mapStateToProps)(Body);","import React from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport Cart from \"../pages/Cart\";\r\nimport Favourites from '../pages/Favourites';\r\nimport Body from \"../components/Body\";\r\n\r\nconst AppRoutes = ( ) => {\r\n        return (\r\n            <>\r\n                <Switch>\r\n                <Route  path='/favourites' component={Favourites}/>\r\n                <Route  path='/cart' component={Cart}/>\r\n                <Route  path='/' component={Body}/>\r\n                </Switch>\r\n            </>\r\n        );\r\n\r\n};\r\n\r\nexport default AppRoutes;","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport Header from \"./components/Header\";\r\nimport Modal from \"./components/Modal\";\r\nimport Footer  from \"./components/Footer\";\r\nimport AppRoutes from \"./routes/AppRoutes\";\r\nimport {connect} from 'react-redux';\r\nimport {changeQuantityOperation, addToCartOperation, removeFromCartOperation, saveCartListOperation} from './store/cartList/operations';\r\nimport {saveFavouritesOperation} from './store/favourites/operations';\r\nimport {closeModalOperation, closeModalCartOperation} from './store/modal/operations';\r\nimport {saveProductsOperation} from './store/products/operations';\r\n\r\nconst App = ({cartList, products, modal, saveProducts, saveFavourites, saveCartList, closeModal, closeModalCart,\r\n                 addProductToCart, addQuantity, removeFromCart}) => {\r\n\r\n    const {currentProduct} = products;\r\n    const { modalOpen, cartModalOpen} = modal;\r\n\r\n    useEffect(() => {\r\n        saveProducts();\r\n        saveFavourites(JSON.parse(localStorage.getItem('favs')) || []);\r\n        saveCartList(JSON.parse(localStorage.getItem('cartList')) || []);\r\n\r\n    },[saveProducts, saveFavourites, saveCartList]);\r\n\r\n   const addToCart = (product) => {\r\n        const cartElement = cartList.find(item => item.id === product.id);\r\n        if (!!cartElement) {\r\n            cartElement.quantity ++;\r\n            addQuantity(cartElement);\r\n            return;\r\n        }\r\n        product.quantity = 1;\r\n       addProductToCart(product);\r\n\r\n    };\r\n\r\n   const confirmPurchase = () => {\r\n        closeModal();\r\n       addToCart(currentProduct);\r\n    };\r\n\r\n   const confirmDeletionFromCart = () => {\r\n       removeFromCart(currentProduct);\r\n        closeModalCart();\r\n    };\r\n\r\n    return (\r\n            <>\r\n                {modalOpen && <Modal header='' closeButton text='Добавить товар в корзину? '\r\n                                     onClick={closeModal} actionBtnClassName='btn--modal'\r\n                                     confirm={confirmPurchase}/>}\r\n\r\n                {cartModalOpen && <Modal header='Удаление' closeButton text='Вы действительно хотите удалить товар из корзины?'\r\n                                     onClick={closeModalCart} actionBtnClassName='btn--modal'\r\n                                     confirm={confirmDeletionFromCart}/>}\r\n                <Header/>\r\n                <AppRoutes/>\r\n                <Footer/>\r\n\r\n            </>\r\n        );\r\n };\r\n\r\nconst mapStateToProps = ({cartList, products, modal}) => ({cartList, products, modal});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    saveProducts: ( ) => dispatch(saveProductsOperation()),\r\n    saveFavourites: (fav) => dispatch(saveFavouritesOperation(fav)),\r\n    saveCartList: (product) => dispatch(saveCartListOperation(product)),\r\n    closeModal: () => dispatch(closeModalOperation()),\r\n    closeModalCart: () => dispatch(closeModalCartOperation()),\r\n    addQuantity: (product) => dispatch(changeQuantityOperation(product)),\r\n    addProductToCart: (product) => dispatch(addToCartOperation(product)),\r\n    removeFromCart: (product) => dispatch(removeFromCartOperation(product)),\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as cartListActions from './types';\r\n\r\nconst initialState = [];\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case cartListActions.SAVE_CARTLIST:\r\n            return  action.payload;\r\n\r\n        case cartListActions.DO_SHOPPING:\r\n            localStorage.setItem('cartList', JSON.stringify([]));\r\n            return [];\r\n\r\n        case cartListActions.CHANGE_QUANTITY:\r\n            localStorage.setItem('cartList', JSON.stringify(state\r\n                .map(obj => obj.id === action.payload.id ? {...obj, quantity : action.payload.quantity} : obj )));\r\n            return  state.map(obj => obj.id === action.payload.id ? {...obj, quantity : action.payload.quantity} : obj);\r\n\r\n        case cartListActions.ADD_PRODUCT_TO_CART:\r\n            localStorage.setItem('cartList', JSON.stringify([...state, action.payload]));\r\n            return [...state, action.payload];\r\n\r\n        case cartListActions.REMOVE_FROM_CART:\r\n            localStorage.setItem('cartList', JSON.stringify(state.filter(item => item.id !== action.payload.id)));\r\n            return state.filter(item => item.id !== action.payload.id);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as favouritesActions from './types';\r\n\r\n\r\nconst initialState = [];\r\n\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case favouritesActions.SAVE_FAVOURITES:\r\n            return action.payload;\r\n\r\n        case favouritesActions.ADD_CARD_TO_FAV:\r\n            localStorage.setItem('favs', JSON.stringify( [...state, action.payload]));\r\n            return  [...state, action.payload];\r\n\r\n        case favouritesActions.REMOVE_CARD_FROM_FAV:\r\n            localStorage.setItem('favs', JSON.stringify(state.filter(element => element.id !== action.payload.id)));\r\n            return  state.filter(element => element.id !== action.payload.id);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as modalActions from './types';\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n    cartModalOpen: false,\r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case modalActions.OPEN_MODAL:\r\n            return { ...state, modalOpen: true };\r\n\r\n        case modalActions.CLOSE_MODAL:\r\n            return { ...state, modalOpen: false };\r\n\r\n        case modalActions.OPEN_MODAL_CART:\r\n            return { ...state, cartModalOpen: true };\r\n\r\n        case modalActions.CLOSE_MODAL_CART:\r\n            return { ...state, cartModalOpen: false };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as productActions from './types';\r\n\r\n\r\n\r\nconst initialState = {\r\n    products : [],\r\n    currentProduct: null,\r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case productActions.SAVE_PRODUCTS:\r\n            return { ...state, products: action.payload};\r\n\r\n        case productActions.GET_CURRENT_PRODUCT:\r\n            return { ...state, currentProduct: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import {combineReducers} from \"redux\";\r\nimport cartList from './cartList/reducer';\r\nimport favourites from './favourites/reducer';\r\nimport modal from './modal/reducer';\r\nimport products from './products/reducer';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    cartList,\r\n    favourites,\r\n    modal,\r\n    products,\r\n});\r\n\r\n\r\nexport default rootReducer;","import {applyMiddleware, compose, createStore} from \"redux\";\r\nimport rootReducer from './reducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f;\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    compose(applyMiddleware(thunk), devTools)\r\n\r\n);\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {Provider} from \"react-redux\";\r\nimport store from './store/store';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App/>\r\n        </BrowserRouter>\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}